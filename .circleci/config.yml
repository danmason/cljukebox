# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1

orbs:
  docker: circleci/docker@0.5.20

jobs:
  build-uberjar:
    docker:
      - image: circleci/clojure:lein-2.9.5
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: lein deps
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}
      - run: lein uberjar
      - run:
          command: |
            mkdir ~/artifacts
            mv target/cljukebox.jar ~/artifacts/cljukebox.jar
      - persist_to_workspace:
          root: ~/
          paths:
            - target
            - artifacts

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ~/artifacts/

  deploy-docker-image:
    docker:
      - image: circleci/clojure:openjdk-8-tools-deps
    steps:
      - attach_workspace:
          at: ~/
      - checkout
      - docker/install-docker
      - setup_remote_docker
      - run:
          command: |
            export IMAGE_NAME=danmason/cljukebox
            docker build -t "${IMAGE_NAME}:${CIRCLE_TAG}"
            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
            docker push "${IMAGE_NAME}:${CIRCLE_TAG}"


workflows:
  version: 2.1
  release:
    jobs:
      - build-uberjar:
          filters:
           tags:
             only: /^\d+\.\d+\.\d+$/
           branches:
             only: main
      - publish-github-release:
          requires:
            - build-uberjar
          filters:
           tags:
             only: /^\d+\.\d+\.\d+$/
           branches:
             ignore: /.*/
      - deploy-docker-image:
          requires:
            - build-uberjar
          filters:
           tags:
             only: /^\d+\.\d+\.\d+$/
           branches:
             ignore: /.*/
